-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.badges
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    deleted_at timestamp(6) without time zone,
    badge_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    image_url character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT badges_pkey PRIMARY KEY (badge_name)
    );

CREATE TABLE IF NOT EXISTS public.character3ds
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    character3d_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    model_url character varying(255) COLLATE pg_catalog."default",
    user_user_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT character3ds_pkey PRIMARY KEY (character3d_name),
    CONSTRAINT character3ds_user_user_id_key UNIQUE (user_user_id)
    );

CREATE TABLE IF NOT EXISTS public.chat_messages
(
    is_deleted boolean NOT NULL,
    is_read boolean NOT NULL,
    sent_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    chat_message_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content character varying(255) COLLATE pg_catalog."default",
    media_url character varying(255) COLLATE pg_catalog."default",
    message_type character varying(255) COLLATE pg_catalog."default",
    room_room_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT chat_messages_pkey PRIMARY KEY (chat_message_id)
    );

CREATE TABLE IF NOT EXISTS public.couples
(
    is_deleted boolean NOT NULL,
    status smallint,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    user1id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user2id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT couples_pkey PRIMARY KEY (user1id, user2id)
    );

CREATE TABLE IF NOT EXISTS public.friend_requests
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    friend_request_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    receiver_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    requester_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT friend_requests_pkey PRIMARY KEY (friend_request_id)
    );

CREATE TABLE IF NOT EXISTS public.friendships
(
    is_deleted boolean NOT NULL,
    status smallint,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    receiver_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    requester_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT friendships_pkey PRIMARY KEY (receiver_id, requester_id)
    );

CREATE TABLE IF NOT EXISTS public.group_sessions
(
    is_deleted boolean NOT NULL,
    ended_at timestamp(6) without time zone,
    started_at timestamp(6) without time zone,
    group_session_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    lesson_id character varying(255) COLLATE pg_catalog."default",
    room_room_id character varying(255) COLLATE pg_catalog."default",
    user_user_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT group_sessions_pkey PRIMARY KEY (group_session_id)
    );

CREATE TABLE IF NOT EXISTS public.invalidated_tokens
(
    expiry_time timestamp(6) without time zone,
    token character varying(512) COLLATE pg_catalog."default",
    invalidated_token_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT invalidated_tokens_pkey PRIMARY KEY (invalidated_token_id),
    CONSTRAINT invalidated_tokens_token_key UNIQUE (token)
    );

CREATE TABLE IF NOT EXISTS public.languages
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    description character varying(255) COLLATE pg_catalog."default",
    language_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT languages_pkey PRIMARY KEY (language_name)
    );

CREATE TABLE IF NOT EXISTS public.leaderboards
(
    is_deleted boolean NOT NULL,
    snapshot_date date,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    leaderboard_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    period character varying(255) COLLATE pg_catalog."default",
    tab character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT leaderboards_pkey PRIMARY KEY (leaderboard_id)
    );

CREATE TABLE IF NOT EXISTS public.leaderboards_entries
(
    change integer NOT NULL,
    is_deleted boolean NOT NULL,
    level integer NOT NULL,
    rank integer NOT NULL,
    score integer NOT NULL,
    streak integer NOT NULL,
    leaderboard_entry_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    leaderboard_leaderboard_id character varying(255) COLLATE pg_catalog."default",
    user_user_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT leaderboards_entries_pkey PRIMARY KEY (leaderboard_entry_id)
    );

CREATE TABLE IF NOT EXISTS public.lesson_categories
(
    is_deleted boolean NOT NULL,
    creation_date timestamp(6) without time zone,
    update_date timestamp(6) without time zone,
    description character varying(255) COLLATE pg_catalog."default",
    lesson_category_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT lesson_categories_pkey PRIMARY KEY (lesson_category_name)
    );

CREATE TABLE IF NOT EXISTS public.lesson_order_in_series
(
    is_deleted boolean NOT NULL,
    order_index integer NOT NULL,
    lesson_lesson_name character varying(255) COLLATE pg_catalog."default",
    lesson_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    series_lesson_series_name character varying(255) COLLATE pg_catalog."default",
    series_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT lesson_order_in_series_pkey PRIMARY KEY (lesson_name, series_name)
    );

CREATE TABLE IF NOT EXISTS public.lesson_progress
(
    is_deleted boolean NOT NULL,
    score integer NOT NULL,
    completed_at timestamp(6) without time zone,
    lesson_lesson_name character varying(255) COLLATE pg_catalog."default",
    lesson_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_user_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT lesson_progress_pkey PRIMARY KEY (lesson_name, user_id)
    );

CREATE TABLE IF NOT EXISTS public.lesson_progress_wrong_items
(
    lesson_progress_lesson_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    lesson_progress_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    wrong_items character varying(255) COLLATE pg_catalog."default"
    );

CREATE TABLE IF NOT EXISTS public.lesson_questions
(
    is_correct boolean NOT NULL,
    is_deleted boolean NOT NULL,
    created_date timestamp(6) without time zone,
    updated_date timestamp(6) without time zone,
    correct_option character varying(255) COLLATE pg_catalog."default",
    lesson_lesson_name character varying(255) COLLATE pg_catalog."default",
    lesson_question_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    optiona character varying(255) COLLATE pg_catalog."default",
    optionb character varying(255) COLLATE pg_catalog."default",
    optionc character varying(255) COLLATE pg_catalog."default",
    optiond character varying(255) COLLATE pg_catalog."default",
    question character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT lesson_questions_pkey PRIMARY KEY (lesson_question_id)
    );

CREATE TABLE IF NOT EXISTS public.lesson_series
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    description character varying(255) COLLATE pg_catalog."default",
    lesson_series_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT lesson_series_pkey PRIMARY KEY (lesson_series_name)
    );

CREATE TABLE IF NOT EXISTS public.lesson_sub_category
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    category_lesson_category_name character varying(255) COLLATE pg_catalog."default",
    lesson_sub_category_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT lesson_sub_category_pkey PRIMARY KEY (lesson_sub_category_name)
    );

CREATE TABLE IF NOT EXISTS public.lessons
(
    exp_reward integer NOT NULL,
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    lesson_category_lesson_category_id character varying(255) COLLATE pg_catalog."default",
    lesson_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    lesson_sub_category_lesson_sub_category_name character varying(255) COLLATE pg_catalog."default",
    series_lesson_series_name character varying(255) COLLATE pg_catalog."default",
    title character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT lessons_pkey PRIMARY KEY (lesson_name)
    );

CREATE TABLE IF NOT EXISTS public.logs
(
    action smallint,
    is_deleted boolean NOT NULL,
    target_table smallint,
    "timestamp" timestamp(6) without time zone,
    description character varying(255) COLLATE pg_catalog."default",
    log_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    target_id character varying(255) COLLATE pg_catalog."default",
    user_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT logs_pkey PRIMARY KEY (log_id)
    );

CREATE TABLE IF NOT EXISTS public.notifications
(
    is_deleted boolean NOT NULL,
    read boolean NOT NULL,
    created_at timestamp(6) without time zone,
    content character varying(255) COLLATE pg_catalog."default",
    notification_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    user_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT notifications_pkey PRIMARY KEY (notification_id)
    );

CREATE TABLE IF NOT EXISTS public.permissions
(
    is_deleted boolean NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    permission_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT permissions_pkey PRIMARY KEY (permission_id)
    );

CREATE TABLE IF NOT EXISTS public.role_permissions
(
    permissions_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT role_permissions_pkey PRIMARY KEY (permissions_id, role_id)
    );

CREATE TABLE IF NOT EXISTS public.roles
(
    is_deleted boolean NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    role_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (role_id)
    );

CREATE TABLE IF NOT EXISTS public.room_members
(
    is_deleted boolean NOT NULL,
    role smallint,
    joined_at timestamp(6) without time zone,
    room_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT room_members_pkey PRIMARY KEY (room_id, user_id)
    );

CREATE TABLE IF NOT EXISTS public.rooms
(
    is_deleted boolean NOT NULL,
    max_members integer NOT NULL,
    purpose smallint,
    room_type smallint,
    status smallint,
    created_at timestamp(6) without time zone,
    deleted_at timestamp(6) without time zone,
    creator_user_id character varying(255) COLLATE pg_catalog."default",
    room_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    room_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT rooms_pkey PRIMARY KEY (room_id)
    );

CREATE TABLE IF NOT EXISTS public.user_badges
(
    is_deleted boolean NOT NULL,
    awarded_at timestamp(6) without time zone,
    badge_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_badges_pkey PRIMARY KEY (is_deleted, badge_id, user_id)
    );

CREATE TABLE IF NOT EXISTS public.user_fcm_tokens
(
    is_deleted boolean NOT NULL,
    created_at timestamp(6) without time zone,
    fcm_token character varying(255) COLLATE pg_catalog."default",
    user_fcm_token_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_user_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT user_fcm_tokens_pkey PRIMARY KEY (user_fcm_token_id)
    );

CREATE TABLE IF NOT EXISTS public.user_languages
(
    learning_language_learning_languages_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_languages_pkey PRIMARY KEY (learning_language_learning_languages_name, user_user_id)
    );

CREATE TABLE IF NOT EXISTS public.user_roles
(
    role_role_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (role_role_id, user_user_id)
    );

CREATE TABLE IF NOT EXISTS public.user_series_progress
(
    current_index integer NOT NULL,
    is_deleted boolean NOT NULL,
    completed_at timestamp(6) without time zone,
    started_at timestamp(6) without time zone,
    series_lesson_series_name character varying(255) COLLATE pg_catalog."default",
    series_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_user_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT user_series_progress_pkey PRIMARY KEY (series_name, user_id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    country smallint,
    is_deleted boolean NOT NULL,
    level integer NOT NULL,
    score integer NOT NULL,
    streak integer NOT NULL,
    created_at timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    avatar_url character varying(255) COLLATE pg_catalog."default",
    badge_default_id character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    fullname character varying(255) COLLATE pg_catalog."default",
    native_language_name character varying(255) COLLATE pg_catalog."default",
    nickname character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    username character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
    );

CREATE TABLE IF NOT EXISTS public.video_call_logs
(
    is_deleted boolean NOT NULL,
    video_call_type smallint,
    end_time timestamp(6) without time zone,
    start_time timestamp(6) without time zone,
    callee_user_id character varying(255) COLLATE pg_catalog."default",
    caller_user_id character varying(255) COLLATE pg_catalog."default",
    room_room_id character varying(255) COLLATE pg_catalog."default",
    video_call_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT video_call_logs_pkey PRIMARY KEY (video_call_id)
    );

CREATE TABLE IF NOT EXISTS public.video_call_participant_user_ids
(
    participant_user_ids character varying(255) COLLATE pg_catalog."default",
    video_call_video_call_id character varying(255) COLLATE pg_catalog."default" NOT NULL
    );

CREATE TABLE IF NOT EXISTS public.video_calls
(
    is_deleted boolean NOT NULL,
    status smallint,
    started_at timestamp(6) without time zone,
    room_room_id character varying(255) COLLATE pg_catalog."default",
    video_call_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT video_calls_pkey PRIMARY KEY (video_call_id)
    );

ALTER TABLE IF EXISTS public.character3ds
    ADD CONSTRAINT fklwuak8141gsl27ryh5uf7uaoi FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS character3ds_user_user_id_key
    ON public.character3ds(user_user_id);


ALTER TABLE IF EXISTS public.chat_messages
    ADD CONSTRAINT fk68mfb5nir1fc92uxs55aswv4c FOREIGN KEY (room_room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chat_messages
    ADD CONSTRAINT fk8tanjitjrjgsmdn7o7n060b0x FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.couples
    ADD CONSTRAINT fk4phi84o9pnm9v0n26arrv8cpk FOREIGN KEY (user2id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.couples
    ADD CONSTRAINT fkq5n6uejjsom35ii2oy1ko6s42 FOREIGN KEY (user1id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.friend_requests
    ADD CONSTRAINT fk7ywhxvetrkrvsehux9akgd18y FOREIGN KEY (receiver_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.friend_requests
    ADD CONSTRAINT fki9tmuhojnrsm7cgnteodpip9j FOREIGN KEY (requester_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.friendships
    ADD CONSTRAINT fkas6bp8so5n3pfcqtfxt72e1ii FOREIGN KEY (requester_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.friendships
    ADD CONSTRAINT fkpk7w2cj6m9n224ny2t7fhi47 FOREIGN KEY (receiver_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.group_sessions
    ADD CONSTRAINT fk140ycfb4lp5jngci3hj1inrvx FOREIGN KEY (room_room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.group_sessions
    ADD CONSTRAINT fk6600slot7bbej9gxibkmdw744 FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.group_sessions
    ADD CONSTRAINT fksktkwnx55ogvxq6kasxmk6drh FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.leaderboards_entries
    ADD CONSTRAINT fkdtprohgxvfgafb9lt6amkqadk FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.leaderboards_entries
    ADD CONSTRAINT fkl7molgebp3ejda3g31lqpj6gl FOREIGN KEY (leaderboard_leaderboard_id)
    REFERENCES public.leaderboards (leaderboard_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_order_in_series
    ADD CONSTRAINT fkaowmx7b9ips2tmhfuba124aw0 FOREIGN KEY (lesson_lesson_name)
    REFERENCES public.lessons (lesson_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_order_in_series
    ADD CONSTRAINT fkq5bovfnyhitp2a8dnp214dw9b FOREIGN KEY (series_lesson_series_name)
    REFERENCES public.lesson_series (lesson_series_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_progress
    ADD CONSTRAINT fkhpw4b127x4scmw0ix1sglrpn5 FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_progress
    ADD CONSTRAINT fkr0f2e7w4hhgmoanjtswr311a9 FOREIGN KEY (lesson_lesson_name)
    REFERENCES public.lessons (lesson_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_progress_wrong_items
    ADD CONSTRAINT fkab0wmeshx6wig949u4rmw8t3f FOREIGN KEY (lesson_progress_lesson_name, lesson_progress_user_id)
    REFERENCES public.lesson_progress (lesson_name, user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_questions
    ADD CONSTRAINT fktk2bl9ruy8hr0ufp5exwh64fn FOREIGN KEY (lesson_lesson_name)
    REFERENCES public.lessons (lesson_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lesson_sub_category
    ADD CONSTRAINT fkk4l0k298qtdn7gcg61qn0babc FOREIGN KEY (category_lesson_category_name)
    REFERENCES public.lesson_categories (lesson_category_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fk7kfp37qg1yt8vj59qocysjddv FOREIGN KEY (lesson_category_lesson_category_id)
    REFERENCES public.lesson_categories (lesson_category_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fkc8quh98obpcmd2675wkvq6fla FOREIGN KEY (series_lesson_series_name)
    REFERENCES public.lesson_series (lesson_series_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fkponj7x2mttg30kfeq63gc5j9d FOREIGN KEY (lesson_sub_category_lesson_sub_category_name)
    REFERENCES public.lesson_sub_category (lesson_sub_category_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.logs
    ADD CONSTRAINT fk7j8wt4xwwj5s492g2c7yolhp2 FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT fkccnf0eej0biahrawuijjwn6tp FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.role_permissions
    ADD CONSTRAINT fkm8bvjlgei04gj2kxikrq12emk FOREIGN KEY (permissions_id)
    REFERENCES public.permissions (permission_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.role_permissions
    ADD CONSTRAINT fkn5fotdgk8d1xvo8nav9uv3muc FOREIGN KEY (role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.room_members
    ADD CONSTRAINT fk1bbl9rh6ae8v6mebaoq2ilg9g FOREIGN KEY (room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.room_members
    ADD CONSTRAINT fkmcymqhedxe30d98p07eeqo3my FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rooms
    ADD CONSTRAINT fkn1iu09wuhu99kpwcx0igayskj FOREIGN KEY (creator_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_badges
    ADD CONSTRAINT fkk6e00pguaij0uke6xr81gt045 FOREIGN KEY (badge_id)
    REFERENCES public.badges (badge_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_badges
    ADD CONSTRAINT fkr46ah81sjymsn035m4ojstn5s FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_fcm_tokens
    ADD CONSTRAINT fk5twtc0juvj7n00p36tb9t6eib FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_languages
    ADD CONSTRAINT fkh44hka6i42findeavy8s5hnle FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_languages
    ADD CONSTRAINT fkmt5305bmbyb62hlee75dckbbk FOREIGN KEY (learning_language_learning_languages_name)
    REFERENCES public.languages (language_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT fk5gikiw021w6y16a8t5vjwqwyj FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT fki9cljaxlprpfgaxuxv4q7m4tg FOREIGN KEY (role_role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_series_progress
    ADD CONSTRAINT fk7tcpflij0weerwnr99lt5x1rt FOREIGN KEY (user_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_series_progress
    ADD CONSTRAINT fklwcogsbgd0o4cp13f0u3bh3bm FOREIGN KEY (series_lesson_series_name)
    REFERENCES public.lesson_series (lesson_series_name) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.video_call_logs
    ADD CONSTRAINT fkdk8w7mtlmn3b5jvb36bn4pgiq FOREIGN KEY (callee_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.video_call_logs
    ADD CONSTRAINT fkf30dub2lq4ft7owu64ni3016j FOREIGN KEY (room_room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.video_call_logs
    ADD CONSTRAINT fkqejdf7wfoydkobec71hsynbtq FOREIGN KEY (caller_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.video_call_participant_user_ids
    ADD CONSTRAINT fk2ruq1ahpn31hnyr2bdh03dcvc FOREIGN KEY (video_call_video_call_id)
    REFERENCES public.video_calls (video_call_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.video_calls
    ADD CONSTRAINT fkithio3lgyx32h2jgl5bn2gglh FOREIGN KEY (room_room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;

END;
BEGIN;

-- 1. Thêm dữ liệu vào bảng languages (Ngôn ngữ)
INSERT INTO public.languages (is_deleted, created_at, updated_at, description, language_name) VALUES
                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'English language', 'English'),
                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Spanish language', 'Spanish'),
                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'French language', 'French'),
                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Vietnamese language', 'Vietnamese');

-- 2. Thêm dữ liệu vào bảng users (Người dùng)
INSERT INTO public.users (country, is_deleted, level, score, streak, created_at, updated_at, avatar_url, badge_default_id, email, fullname, native_language_name, nickname, password, phone, user_id, username) VALUES
                                                                                                                                                                                                                    (1, false, 1, 100, 5, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'https://example.com/avatars/user1.png', NULL, 'user1@example.com', 'John Doe', 'English', 'Johnny', 'hashed_password_1', '1234567890', 'user1', 'john_doe'),
                                                                                                                                                                                                                    (2, false, 2, 200, 10, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'https://example.com/avatars/user2.png', NULL, 'user2@example.com', 'Maria Garcia', 'Spanish', 'MariaG', 'hashed_password_2', '0987654321', 'user2', 'maria_garcia'),
                                                                                                                                                                                                                    (3, false, 1, 50, 2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'https://example.com/avatars/user3.png', NULL, 'user3@example.com', 'Nguyen Van A', 'Vietnamese', 'VanA', 'hashed_password_3', '0123456789', 'user3', 'nguyen_van_a');

-- 3. Thêm dữ liệu vào bảng user_languages (Ngôn ngữ học của người dùng)
INSERT INTO public.user_languages (learning_language_learning_languages_name, user_user_id) VALUES
                                                                                                ('Spanish', 'user1'),
                                                                                                ('English', 'user2'),
                                                                                                ('French', 'user3'),
                                                                                                ('English', 'user3');

-- 4. Thêm dữ liệu vào bảng lesson_categories (Danh mục bài học)
INSERT INTO public.lesson_categories (is_deleted, creation_date, update_date, description, lesson_category_name) VALUES
                                                                                                                     (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Basic vocabulary lessons', 'Vocabulary'),
                                                                                                                     (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Grammar lessons', 'Grammar'),
                                                                                                                     (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Conversation practice', 'Conversation');

-- 5. Thêm dữ liệu vào bảng lesson_sub_category (Danh mục phụ bài học)
INSERT INTO public.lesson_sub_category (is_deleted, created_at, updated_at, category_lesson_category_name, lesson_sub_category_name) VALUES
                                                                                                                                         (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Vocabulary', 'Basic Words'),
                                                                                                                                         (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Grammar', 'Verb Conjugation'),
                                                                                                                                         (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Conversation', 'Daily Dialogues');

-- 6. Thêm dữ liệu vào bảng lesson_series (Loạt bài học)
INSERT INTO public.lesson_series (is_deleted, created_at, updated_at, description, lesson_series_name, title) VALUES
                                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Beginner English vocabulary series', 'beginner_english_series', 'Beginner English'),
                                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Intermediate Spanish grammar series', 'intermediate_spanish_series', 'Intermediate Spanish'),
                                                                                                                  (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'French conversation series', 'french_conversation_series', 'French Conversation');

-- 7. Thêm dữ liệu vào bảng lessons (Bài học)
INSERT INTO public.lessons (exp_reward, is_deleted, created_at, updated_at, lesson_category_lesson_category_id, lesson_name, lesson_sub_category_lesson_sub_category_name, series_lesson_series_name, title, type) VALUES
                                                                                                                                                                                                                       (50, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Vocabulary', 'lesson_english_1', 'Basic Words', 'beginner_english_series', 'Basic English Words', 'Quiz'),
                                                                                                                                                                                                                       (75, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Grammar', 'lesson_spanish_1', 'Verb Conjugation', 'intermediate_spanish_series', 'Spanish Verb Conjugation', 'Exercise'),
                                                                                                                                                                                                                       (100, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'Conversation', 'lesson_french_1', 'Daily Dialogues', 'french_conversation_series', 'French Daily Dialogues', 'Practice');

-- 8. Thêm dữ liệu vào bảng lesson_order_in_series (Thứ tự bài học trong loạt)
INSERT INTO public.lesson_order_in_series (is_deleted, order_index, lesson_lesson_name, lesson_name, series_lesson_series_name, series_name) VALUES
                                                                                                                                                 (false, 1, 'lesson_english_1', 'lesson_english_1_order', 'beginner_english_series', 'beginner_english_series'),
                                                                                                                                                 (false, 1, 'lesson_spanish_1', 'lesson_spanish_1_order', 'intermediate_spanish_series', 'intermediate_spanish_series'),
                                                                                                                                                 (false, 1, 'lesson_french_1', 'lesson_french_1_order', 'french_conversation_series', 'french_conversation_series');

-- 9. Thêm dữ liệu vào bảng lesson_questions (Câu hỏi bài học)
INSERT INTO public.lesson_questions (is_correct, is_deleted, created_date, updated_date, correct_option, lesson_lesson_name, lesson_question_id, optiona, optionb, optionc, optiond, question) VALUES
                                                                                                                                                                                                   (true, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'optiona', 'lesson_english_1', 'question_1', 'House', 'Car', 'Tree', 'Book', 'What is the English word for "casa"?'),
                                                                                                                                                                                                   (true, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'optionb', 'lesson_spanish_1', 'question_2', 'Soy', 'Eres', 'Es', 'Somos', 'What is the correct conjugation of "ser" for "tú"? (you)?'),
                                                                                                                                                                                                   (true, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'optionc', 'lesson_french_1', 'question_3', 'Bonjour', 'Merci', 'Salut', 'Au revoir', 'How do you say "Hello" in French?');

-- 10. Thêm dữ liệu vào bảng lesson_progress (Tiến độ bài học)
INSERT INTO public.lesson_progress (is_deleted, score, completed_at, lesson_lesson_name, lesson_name, user_id, user_user_id) VALUES
                                                                                                                                 (false, 80, CURRENT_TIMESTAMP, 'lesson_english_1', 'progress_english_1_user1', 'user1', 'user1'),
                                                                                                                                 (false, 90, CURRENT_TIMESTAMP, 'lesson_spanish_1', 'progress_spanish_1_user2', 'user2', 'user2'),
                                                                                                                                 (false, 70, CURRENT_TIMESTAMP, 'lesson_french_1', 'progress_french_1_user3', 'user3', 'user3');

-- 11. Thêm dữ liệu vào bảng lesson_progress_wrong_items (Câu trả lời sai)
INSERT INTO public.lesson_progress_wrong_items (lesson_progress_lesson_name, lesson_progress_user_id, wrong_items) VALUES
                                                                                                                       ('progress_english_1_user1', 'user1', 'question_1:optionb'),
                                                                                                                       ('progress_spanish_1_user2', 'user2', 'question_2:optiona'),
                                                                                                                       ('progress_french_1_user3', 'user3', 'question_3:optiond');

-- 12. Thêm dữ liệu vào bảng badges (Huy hiệu)
INSERT INTO public.badges (is_deleted, created_at, deleted_at, badge_name, description, image_url) VALUES
                                                                                                       (false, CURRENT_TIMESTAMP, NULL, 'beginner_badge', 'Awarded for completing first lesson', 'https://example.com/badges/beginner.png'),
                                                                                                       (false, CURRENT_TIMESTAMP, NULL, 'streak_master', 'Awarded for maintaining a 7-day streak', 'https://example.com/badges/streak.png'),
                                                                                                       (false, CURRENT_TIMESTAMP, NULL, 'grammar_guru', 'Awarded for mastering grammar lessons', 'https://example.com/badges/grammar.png');

-- 13. Thêm dữ liệu vào bảng user_badges (Huy hiệu của người dùng)
INSERT INTO public.user_badges (is_deleted, awarded_at, badge_id, user_id) VALUES
                                                                               (false, CURRENT_TIMESTAMP, 'beginner_badge', 'user1'),
                                                                               (false, CURRENT_TIMESTAMP, 'streak_master', 'user2'),
                                                                               (false, CURRENT_TIMESTAMP, 'grammar_guru', 'user3');

-- 14. Thêm dữ liệu vào bảng leaderboards (Bảng xếp hạng)
INSERT INTO public.leaderboards (is_deleted, snapshot_date, created_at, updated_at, leaderboard_id, period, tab) VALUES
                                                                                                                     (false, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'leaderboard_1', 'weekly', 'global'),
                                                                                                                     (false, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'leaderboard_2', 'monthly', 'friends'),
                                                                                                                     (false, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'leaderboard_3', 'weekly', 'language_specific');

-- 15. Thêm dữ liệu vào bảng leaderboards_entries (Mục nhập bảng xếp hạng)
INSERT INTO public.leaderboards_entries (change, is_deleted, level, rank, score, streak, leaderboard_entry_id, leaderboard_leaderboard_id, user_user_id) VALUES
                                                                                                                                                             (1, false, 1, 1, 100, 5, 'entry_1', 'leaderboard_1', 'user1'),

                                                                                                                                                             (0, false, 2, 2, 200, 10, 'entry_2', 'leaderboard_1', 'user2'),
                                                                                                                                                             (-1, false, 1, 3, 50, 2, 'entry_3', 'leaderboard_1', 'user3');
-- 1. Thêm dữ liệu vào bảng rooms (Phòng học hoặc trò chuyện)
INSERT INTO public.rooms (is_deleted, max_members, purpose, room_type, status, created_at, deleted_at, creator_user_id, room_id, room_name) VALUES
                                                                                                                                                (false, 10, 1, 1, 1, CURRENT_TIMESTAMP, NULL, 'user1', 'room_1', 'English Study Group'),
                                                                                                                                                (false, 5, 2, 2, 1, CURRENT_TIMESTAMP, NULL, 'user2', 'room_2', 'Spanish Conversation'),
                                                                                                                                                (false, 8, 1, 1, 1, CURRENT_TIMESTAMP, NULL, 'user3', 'room_3', 'French Practice Room');

-- 2. Thêm dữ liệu vào bảng room_members (Thành viên phòng)
INSERT INTO public.room_members (is_deleted, role, joined_at, room_id, user_id) VALUES
                                                                                    (false, 1, CURRENT_TIMESTAMP, 'room_1', 'user1'),
                                                                                    (false, 2, CURRENT_TIMESTAMP, 'room_1', 'user2'),
                                                                                    (false, 1, CURRENT_TIMESTAMP, 'room_2', 'user2'),
                                                                                    (false, 2, CURRENT_TIMESTAMP, 'room_2', 'user3'),
                                                                                    (false, 1, CURRENT_TIMESTAMP, 'room_3', 'user3'),
                                                                                    (false, 2, CURRENT_TIMESTAMP, 'room_3', 'user1');

-- 3. Thêm dữ liệu vào bảng chat_messages (Tin nhắn trò chuyện)
INSERT INTO public.chat_messages (is_deleted, is_read, sent_at, updated_at, chat_message_id, content, media_url, message_type, room_room_id, user_user_id) VALUES
                                                                                                                                                               (false, true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'msg_1', 'Hello, let’s practice English vocabulary!', NULL, 'text', 'room_1', 'user1'),
                                                                                                                                                               (false, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'msg_2', 'Sure, I need help with Spanish verbs.', NULL, 'text', 'room_2', 'user3'),
                                                                                                                                                               (false, true, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'msg_3', 'Can we discuss French greetings?', 'https://example.com/media/audio1.mp3', 'audio', 'room_3', 'user3');

-- 4. Thêm dữ liệu vào bảng friend_requests (Yêu cầu kết bạn)
INSERT INTO public.friend_requests (is_deleted, created_at, updated_at, friend_request_id, receiver_user_id, requester_user_id, status) VALUES
                                                                                                                                            (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'fr_1', 'user2', 'user1', 'pending'),
                                                                                                                                            (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'fr_2', 'user3', 'user2', 'accepted'),
                                                                                                                                            (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'fr_3', 'user1', 'user3', 'rejected');

-- 5. Thêm dữ liệu vào bảng friendships (Quan hệ bạn bè)
INSERT INTO public.friendships (is_deleted, status, created_at, updated_at, receiver_id, requester_id) VALUES
                                                                                                           (false, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'user2', 'user1'),
                                                                                                           (false, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'user3', 'user2');

-- 6. Thêm dữ liệu vào bảng group_sessions (Phiên học nhóm)
INSERT INTO public.group_sessions (is_deleted, ended_at, started_at, group_session_id, lesson_id, room_room_id, user_user_id) VALUES
                                                                                                                                  (false, NULL, CURRENT_TIMESTAMP, 'session_1', 'lesson_english_1', 'room_1', 'user1'),
                                                                                                                                  (false, NULL, CURRENT_TIMESTAMP, 'session_2', 'lesson_spanish_1', 'room_2', 'user2'),
                                                                                                                                  (false, NULL, CURRENT_TIMESTAMP, 'session_3', 'lesson_french_1', 'room_3', 'user3');

-- 7. Thêm dữ liệu vào bảng notifications (Thông báo)
INSERT INTO public.notifications (is_deleted, read, created_at, content, notification_id, title, type, user_user_id) VALUES
                                                                                                                         (false, false, CURRENT_TIMESTAMP, 'You have a new friend request from John Doe', 'notif_1', 'New Friend Request', 'friend_request', 'user2'),
                                                                                                                         (false, true, CURRENT_TIMESTAMP, 'You completed the lesson "Basic English Words"', 'notif_2', 'Lesson Completed', 'lesson_progress', 'user1'),
                                                                                                                         (false, false, CURRENT_TIMESTAMP, 'Join the French Practice Room now!', 'notif_3', 'Room Invitation', 'room_invite', 'user3');

-- 8. Thêm dữ liệu vào bảng video_calls (Cuộc gọi video)
INSERT INTO public.video_calls (is_deleted, status, started_at, room_room_id, video_call_id) VALUES
                                                                                                 (false, 1, CURRENT_TIMESTAMP, 'room_1', 'call_1'),
                                                                                                 (false, 1, CURRENT_TIMESTAMP, 'room_2', 'call_2'),
                                                                                                 (false, 1, CURRENT_TIMESTAMP, 'room_3', 'call_3');

-- 9. Thêm dữ liệu vào bảng video_call_logs (Nhật ký cuộc gọi video)
INSERT INTO public.video_call_logs (is_deleted, video_call_type, end_time, start_time, callee_user_id, caller_user_id, room_room_id, video_call_id) VALUES
                                                                                                                                                        (false, 1, NULL, CURRENT_TIMESTAMP, 'user2', 'user1', 'room_1', 'call_1'),
                                                                                                                                                        (false, 1, NULL, CURRENT_TIMESTAMP, 'user3', 'user2', 'room_2', 'call_2'),
                                                                                                                                                        (false, 1, NULL, CURRENT_TIMESTAMP, 'user1', 'user3', 'room_3', 'call_3');

-- 10. Thêm dữ liệu vào bảng video_call_participant_user_ids (Người tham gia cuộc gọi video)
INSERT INTO public.video_call_participant_user_ids (participant_user_ids, video_call_video_call_id) VALUES
                                                                                                        ('user1', 'call_1'),
                                                                                                        ('user2', 'call_1'),
                                                                                                        ('user2', 'call_2'),
                                                                                                        ('user3', 'call_2'),
                                                                                                        ('user3', 'call_3'),
                                                                                                        ('user1', 'call_3');

-- 11. Thêm dữ liệu vào bảng roles (Vai trò)
INSERT INTO public.roles (is_deleted, description, role_id, role_name) VALUES
                                                                           (false, 'Administrator role with full permissions', 'role_1', 'Admin'),
                                                                           (false, 'Regular user role', 'role_2', 'User'),
                                                                           (false, 'Moderator role for managing rooms', 'role_3', 'Moderator');

-- 12. Thêm dữ liệu vào bảng permissions (Quyền)
INSERT INTO public.permissions (is_deleted, description, name, permission_id) VALUES
                                                                                  (false, 'Permission to manage users', 'manage_users', 'perm_1'),
                                                                                  (false, 'Permission to create rooms', 'create_rooms', 'perm_2'),
                                                                                  (false, 'Permission to join lessons', 'join_lessons', 'perm_3');

-- 13. Thêm dữ liệu vào bảng role_permissions (Quyền của vai trò)
INSERT INTO public.role_permissions (permissions_id, role_id) VALUES
                                                                  ('perm_1', 'role_1'),
                                                                  ('perm_2', 'role_1'),
                                                                  ('perm_3', 'role_2'),
                                                                  ('perm_2', 'role_3');

-- 14. Thêm dữ liệu vào bảng user_roles (Vai trò của người dùng)
INSERT INTO public.user_roles (role_role_id, user_user_id) VALUES
                                                               ('role_1', 'user1'),
                                                               ('role_2', 'user2'),
                                                               ('role_3', 'user3');

-- 15. Thêm dữ liệu vào bảng user_fcm_tokens (Token FCM của người dùng)
INSERT INTO public.user_fcm_tokens (is_deleted, created_at, fcm_token, user_fcm_token_id, user_user_id) VALUES
                                                                                                            (false, CURRENT_TIMESTAMP, 'fcm_token_user1', 'fcm_1', 'user1'),
                                                                                                            (false, CURRENT_TIMESTAMP, 'fcm_token_user2', 'fcm_2', 'user2'),
                                                                                                            (false, CURRENT_TIMESTAMP, 'fcm_token_user3', 'fcm_3', 'user3');

-- 16. Thêm dữ liệu vào bảng invalidated_tokens (Token bị vô hiệu hóa)
INSERT INTO public.invalidated_tokens (expiry_time, token, invalidated_token_id) VALUES
                                                                                     (CURRENT_TIMESTAMP + INTERVAL '1 day', 'token_1', 'inv_token_1'),
                                                                                     (CURRENT_TIMESTAMP + INTERVAL '1 day', 'token_2', 'inv_token_2'),
                                                                                     (CURRENT_TIMESTAMP + INTERVAL '1 day', 'token_3', 'inv_token_3');

-- 17. Thêm dữ liệu vào bảng logs (Nhật ký)
INSERT INTO public.logs (action, is_deleted, target_table, "timestamp", description, log_id, target_id, user_user_id) VALUES
                                                                                                                          (1, false, 1, CURRENT_TIMESTAMP, 'User created', 'log_1', 'user1', 'user1'),
                                                                                                                          (2, false, 2, CURRENT_TIMESTAMP, 'Lesson completed', 'log_2', 'lesson_english_1', 'user1'),
                                                                                                                          (3, false, 3, CURRENT_TIMESTAMP, 'Friend request sent', 'log_3', 'fr_1', 'user1');

-- 18. Thêm dữ liệu vào bảng couples (Cặp đôi)
INSERT INTO public.couples (is_deleted, status, created_at, updated_at, user1id, user2id) VALUES
                                                                                              (false, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'user1', 'user2'),
                                                                                              (false, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'user2', 'user3');

-- 19. Thêm dữ liệu vào bảng character3ds (Nhân vật 3D)
INSERT INTO public.character3ds (is_deleted, created_at, updated_at, character3d_name, description, model_url, user_user_id) VALUES
                                                                                                                                 (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'char_1', '3D character for user1', 'https://example.com/models/char1.glb', 'user1'),
                                                                                                                                 (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'char_2', '3D character for user2', 'https://example.com/models/char2.glb', 'user2'),
                                                                                                                                 (false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'char_3', '3D character for user3', 'https://example.com/models/char3.glb', 'user3');
COMMIT;
